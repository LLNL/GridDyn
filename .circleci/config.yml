version: 2
aliases:
  - &setup_griddyn
    name: setup_griddyn
    environment:
    command: |
      mkdir -p build
      cd build
      eval cmake .. ${CMAKE_FLAGS}
      make -j 4

  - &run_griddyn_tests
    name: run_griddyn_tests
    command: |
      /root/project/scripts/run-circleci-tests.sh
      RESULT=$?
      exit $RESULT

jobs:
  build_gcc8:
    docker:
      - image: helics/buildenv:gcc8-builder
    environment:
      CMAKE_FLAGS: ' -DGRIDDYN_BUILD_TESTS=ON -DGRIDDYN_BUILD_C_SHARED_LIBRARY=ON -DGRIDDYN_ENABLE_FMI_EXPORT=ON'
    steps:
      - checkout
      - run: *setup_griddyn
      - run: *run_griddyn_tests
  build_gcc7:
    docker:
      - image: helics/buildenv:gcc7-builder
    environment:
      CMAKE_FLAGS: ' -DGRIDDYN_BUILD_TESTS=ON '
    steps:
      - checkout
      - run: *setup_griddyn
      - run: *run_griddyn_tests
  build_clang9:
    docker:
      - image: helics/buildenv:clang9-builder
    environment:
      CMAKE_FLAGS: ' -DGRIDDYN_BUILD_TESTS=ON -DGRIDDYN_BUILD_C_SHARED_LIBRARY=ON -DGRIDDYN_ENABLE_FMI_EXPORT=ON'
    steps:
      - checkout
      - run: *setup_griddyn
      - run: *run_griddyn_tests
  build_xbraid:
    docker:
      - image: helics/buildenv:gcc9-builder
    environment:
      CMAKE_FLAGS: ' -DGRIDDYN_ENABLE_MPI=ON'
    steps:
      - run: apt install libopenmpi-dev
      - checkout
      - run: *setup_griddyn

workflows:
  version: 2
  griddyn_test:
    jobs:
      - build_gcc8
      - build_gcc7
      - build_clang9
      - build_xbraid
