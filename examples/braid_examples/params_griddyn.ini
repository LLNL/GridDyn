# External paradae package supports many example equations
# Here only dae_griddyn is supported.
equation = dae_griddyn

# Time integrator options, see griddyn/src/extraSolvers/problems/ODEProblem.cxx for a list of all time-stepping options
#time_int  = RK_BEuler_1
#time_int  = RK_ImpTrap_2
time_int  = RK_ImpCa_24

# Variable (adaptive) time stepping
varstep   = false

# Relative and absolute tolerances for adaptive time stepping
rtol      = 1e-10
atol      = (1e-10)

# Newton solver options
newton_maxiter   = 20
newton_tol       = 1e-10
newton_updatejac = false

# Other options (don't change)
dense_mat = false
bdf_fixedleading = false

# Turns on/off the file output from the Braid solver of the final solution state
print_solution   = false

###
# Begin Braid options 
###

# Maximum refinement factor, if variable stepping is used
max_rfactor            = 4
# Maximum number of time-points allowed, if variable stepping is used
braid_cutoff           = 100000

# Maximum number of times to allow for refinement, if variable stepping is used
braid_max_refinements  = 10

# Initialize Braid with the sequential time stepping solution (for debugging only)
braid_seqsoln          = 0

# Temporal coarsening on level 0
braid_coarsening0      = 10

# Temporal coarsening on all coarser levels
braid_coarsening       = 10

# Standard Braid parameters
braid_min_coarse       = 16
braid_max_lvl          = 25
braid_max_iter         = 30
braid_fmg              = true
braid_tol              = 1e-8
braid_access_lvl       = 1

# BDF parameters
braid_bdf_lowerorder   = false
braid_bdf_paracoarse   = false
# braid_bdf_interp = none (copy), inject(ion), extra(polation)
braid_bdf_interp       = inject
braid_bdf_loweredbylvl = 1
braid_bdf_minorder     = 1
braid_print_all_iter   = false

